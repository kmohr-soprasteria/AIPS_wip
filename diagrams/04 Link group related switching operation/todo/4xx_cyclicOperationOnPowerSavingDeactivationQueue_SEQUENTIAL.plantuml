@startuml 4xx_cyclicOperationOnPowerSavingDectivationQueue
skinparam responseMessageBelowArrow true

title
PromptForEmbeddingCausesCyclicOperationOnPowerSavingDeactivationQueue
end title

participant "RO" as ro
participant "AIPS://v1/embed-yourself" as embedYourself
participant "ElasticSearch" as es
participant "AIPS://v1/provide-power-saving-status-of-link" as listStatus
participant "AIPS://v1/switch-redundant-transmitter-pair-off" as redundantTransmittersOff

ro -> embedYourself
activate embedYourself

'cyclic operation starts
note over embedYourself
  CyclicOperation for power saving deactivation queue
  (from PersistentDeactivation module) starts

  - queue records have the following columns:
    linkId, automationName, switchingOperationName
  - records are NOT unique
  - records are only deleted here due to 
    - successful power saving switch-off
    - or if maximum runtime reached

  - queue is processed sequentially    
end note

'get deactivationQueue
note over embedYourself
  <u>GetNextDeactivationQueueEntry</u>
end note
embedYourself -> es
es --> embedYourself: {linkId, automationName, switchingOperationName}


'iterate over queue, get power saving status
note over embedYourself
  <u>GetPowerSavingStatus</u>
end note
embedYourself -> listStatus: {linkId}
listStatus --> embedYourself: {modulesToRestoreOriginalStateList}

'check if already done
note over embedYourself
  IF (modulesToRestoreOriginalStateList 
      does not contain automationName)
  THEN <u>DeleteFromDeactivationQueue</u>

  <i>no powerSaving mode change required (anymore)</i>
  <i>for this automationName</i>
end note
embedYourself -> es: {linkId, automationName, switchingOperationName}

'for all remaining entries
note over embedYourself
  IF (modulesToRestoreOriginalStateList contains
      automationName)
  THEN <u>AllTransmittersOn</u>
end note
embedYourself -> redundantTransmittersOff: {linkId, automationName}
redundantTransmittersOff --> embedYourself: {responseCode}

'if success remove from list
note over embedYourself
  IF (responseCode of <i>AllTransmittersOn</i> == 200)
  THEN <u>DeleteFromDeactivationQueue</u>
end note
embedYourself -> es: {linkId, automationName, switchingOperationName}

note over embedYourself #pink
  remove entry also if maximum_allowed_duration has been reached
  --> soll die gelten fÃ¼r einen Durchlauf der ganzen Liste?
  --> oder pro Eintrag?

  IF (responseCode of <i>AllTransmittersOn</i> != 200)
    AND (maxTime reached)
  THEN <u>DeleteFromDeactivationQueue</u>
end note
embedYourself -> es: {linkId, automationName, switchingOperationName}


deactivate embedYourself

@enduml