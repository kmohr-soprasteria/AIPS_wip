@startuml 102_removeLinksFromStaticList
skinparam responseMessageBelowArrow true

title
RequestForRemovingLinksFromStaticListCausesFileUpdateAndPersistentDeactivation
end title

participant "external" as requestor
participant "AIPS://v1/remove-links-from-static-list" as removeLinks
participant "AIPS://v1/list-links" as listLinks
participant "AIPS://v1/remove-links-from-power-saving-activation-queue" as stopSimpleActivation
participant "AIPS://v1/add-links-to-power-saving-deactivation-queue" as startPersistentDeactivation

note over requestor
  requestor may provide linkIds which 
  are not found in the staticList file,
  those will be ignored
end note

requestor -> removeLinks: {linkIdList}
activate removeLinks

'get current assignments from staticList
note over removeLinks
  <u>GetCurrentAssignments</u>
  capture current state before deleting linkIds
  from staticList; required for async power saving
  switch-off
end note
removeLinks -> listLinks: {linkIdList}
listLinks --> removeLinks: {list-of-(linkId,automationNamesList)}

'update staticList by deleting the linkIdList links
note over removeLinks
  delete the linkIds of linkIdList from staticList

  <i>note: the linkId is removed immediately (after capturing the </i>
  <i>current state) regardless of whether the deactivation of powerSaving </i>
  <i>mode succeeds or not. </i>
  <i>The deactivation of powerSaving mode is <b>just</b> triggered here, </i>
  <i>in case of failure, the reconcilation module needs to take over. </i>
end note
removeLinks --> requestor: "<i>linkIds removed</i>"

'stop ongoing/planned power saving
note over removeLinks
  FOR each linkId from linkIdList file
    FOR each automationName from linkId.automationNamesList
        build pair (linkId, automationName),
        <u>RemoveFrom<b>Activation</b>Queue</u>
end note
removeLinks -> stopSimpleActivation: {linkId, automationName}
stopSimpleActivation --> removeLinks

'initiate persistentDeactivation to turn power saving off
note over removeLinks
  FOR each pair (linkId, automationName)
    from <i>RemoveFromActivationQueue</i>
    <u>AddTo<b>Deactivation</b>Queue</u>
end note
removeLinks -> startPersistentDeactivation: {linkId, automationName, switchingOperationName="PersistentDeactivation"}

deactivate removeLinks

@enduml